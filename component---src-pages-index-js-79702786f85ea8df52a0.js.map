{"version":3,"sources":["webpack:///./src/components/emoji/emoji.js","webpack:///./src/components/posts/posts.js","webpack:///./src/pages/index.js"],"names":["Emoji","type","role","aria-label","getEmoji","Posts","allMarkdownRemark","totalCount","edges","className","styles","container","count","map","node","console","log","key","id","post","to","fields","slug","link","title","frontmatter","date","excerpt","IndexPage","style","margin"],"mappings":"45BAwBeA,EAnBD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAYf,OACE,0BAAMC,KAAK,MAAMC,aAAYF,GAZd,WACf,OAAQA,GACN,IANsB,eAOpB,MAAO,KACT,IAPe,SAQb,MAAO,KACT,QACE,MAAO,SAMRG,K,qBCoCQC,EAlDD,WAAO,IAAD,SAEhBC,kBAAqBC,EAFL,EAEKA,WAAYC,EAFjB,EAEiBA,MA2BnC,OACE,yBAAKC,UAAWC,IAAOC,WACrB,uBAAGF,UAAWC,IAAOE,OAArB,eACeL,EADf,IAC2B,kBAAC,EAAD,CAAON,KDlCnB,YCoCdO,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEZ,OADAC,QAAQC,IAAIF,GAEV,yBAAKG,IAAKH,EAAKI,GAAIT,UAAWC,IAAOS,MACnC,kBAAC,OAAD,CAAMC,GAAIN,EAAKO,OAAOC,KAAMb,UAAWC,IAAOa,MAC5C,wBAAId,UAAWC,IAAOc,OAAQV,EAAKW,YAAYD,OAC/C,uBAAGf,UAAWC,IAAOgB,MAArB,MAA+BZ,EAAKW,YAAYC,MAChD,uBAAGjB,UAAWC,IAAOiB,SAAUb,EAAKa,gBC7BnCC,UAXG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKJ,MAAM,SACX,kBAAC,EAAD,MACA,wBAAIK,MAAO,CAAEC,OAAQ,cACnB,kBAAC,EAAD,CAAO7B,KFTe,iBEQxB,sBACmD,IACjD,kBAAC,EAAD,CAAOA,KFVe","file":"component---src-pages-index-js-79702786f85ea8df52a0.js","sourcesContent":["import React from 'react'\n\nexport const CONSTRUCTION = 'construction'\nexport const POSTS = 'pencil'\n\nconst Emoji = ({ type }) => {\n  const getEmoji = () => {\n    switch (type) {\n      case CONSTRUCTION:\n        return 'üöß'\n      case POSTS:\n        return 'üìù'\n      default:\n        return 'ü§∑‚Äç‚ôÄÔ∏è'\n    }\n  }\n\n  return (\n    <span role=\"img\" aria-label={type}>\n      {getEmoji()}\n    </span>\n  )\n}\n\nexport default Emoji\n","import React from 'react'\nimport { graphql, Link, useStaticQuery } from 'gatsby'\nimport Emoji, { POSTS } from '../emoji/emoji'\nimport styles from './posts.module.css'\n\nconst Posts = () => {\n  const {\n    allMarkdownRemark: { totalCount, edges },\n  } = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          limit: 5\n        ) {\n          totalCount\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                date(formatString: \"YYYY-MM-DD\")\n              }\n              fields {\n                slug\n              }\n              excerpt\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.count}>\n        Post count: {totalCount} <Emoji type={POSTS} />\n      </p>\n      {edges.map(({ node }) => {\n        console.log(node)\n        return (\n          <div key={node.id} className={styles.post}>\n            <Link to={node.fields.slug} className={styles.link}>\n              <h2 className={styles.title}>{node.frontmatter.title}</h2>\n              <p className={styles.date}> - {node.frontmatter.date}</p>\n              <p className={styles.excerpt}>{node.excerpt}</p>\n            </Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Posts\n","import React from 'react'\nimport Layout from '../components/layout/layout'\nimport SEO from '../components/seo'\nimport Posts from '../components/posts/posts'\nimport Emoji, { CONSTRUCTION } from '../components/emoji/emoji'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Posts />\n    <h1 style={{ margin: '1em 0 2em' }}>\n      <Emoji type={CONSTRUCTION} /> Under Construction{' '}\n      <Emoji type={CONSTRUCTION} />\n    </h1>\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}